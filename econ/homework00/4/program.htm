<html xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./program_files/filelist.xml">
<title>Needs[&quot;DiscreteMath`Combinatorica`&quot;]</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Tim Carlson</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>0</o:TotalTime>
  <o:Created>2000-06-20T23:36:00Z</o:Created>
  <o:LastSaved>2000-06-20T23:36:00Z</o:LastSaved>
  <o:Pages>3</o:Pages>
  <o:Words>604</o:Words>
  <o:Characters>3448</o:Characters>
  <o:Company>SFI</o:Company>
  <o:Lines>28</o:Lines>
  <o:Paragraphs>6</o:Paragraphs>
  <o:CharactersWithSpaces>4234</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:"MS Mincho";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-alt:"\FF2D\FF33 \660E\671D";
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:1 134676480 16 0 131072 0;}
@font-face
	{font-family:"\@MS Mincho";
	panose-1:0 0 0 0 0 0 0 0 0 0;
	mso-font-charset:128;
	mso-generic-font-family:roman;
	mso-font-format:other;
	mso-font-pitch:fixed;
	mso-font-signature:1 134676480 16 0 131072 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 65.95pt 1.0in 65.95pt;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>Needs[&quot;DiscreteMath`Combinatorica`&quot;]<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>(* sets
number of agents in model*)<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>n = 21;
<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>time =
100;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>(*
defines matrix of social attributes for agents*)<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>att =
Table[Random[], {n}, {2}] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>(*
defines matrix of extroversion/introversion for agents*)<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>e = n ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>strangers
= Module[{i, v, perm},<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>v = Table[0, {n}] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>perm = RandomPermutation[n] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>For[i = 1, i &lt;= e, i++,
v[[perm[[i]]]] = .4] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>v] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>(*
defines matrix of existing acquaintance network between agents*)<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>d =
0.5;<o:p></o:p></span></p>


<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>inetwork
= Module[{net, i, j} ,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>net = Table[0, {n}, {n}] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>For[i = 1, i &lt;= n, i++,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>For[j = i + 1, j &lt;= n, j++,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">          </span>If[Random[] &lt; d, net[[i, j]] =
1]]] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>net = net + Transpose[net] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>net] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>(*
creates distance between agents based on social attributes*)<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>dist[i_,
j_] := <o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">    </span>Sqrt[(att[[i, 1]] - att[[j, 1]])^2 +
(att[[i, 2]] - att[[j, 2]])^2] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>distance
= Table[dist[i, j], {i, n}, {j, n}] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>(*
probability agents continue interacting based on social distance*)<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>proba[d_]
:= (1/(d + 1))^3 ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>neighbor[int_,
i_] := Module[{j},<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>j = 1 ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>While[int[[i, j]] == 0, j++] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>j ] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>intstep[net_,
i_, j_] := Module[{p, network},<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>p = proba[distance[[i, j]]] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>network = net ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">  </span><span style="mso-spacerun:
yes">    </span>If[Random[] &lt; p, <o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>network[[i, j]] = 1 ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>network[[j, i]] = 1,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>network[[i, i]] = 1 ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>network[[j, j]] = 1];<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>network ] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes"> </span><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>singlestep[cnetwork_,
int_, net_, i_] := <o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">    </span>Module[{network, j, perm, jp, test, p},<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>network = net ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>perm = RandomPermutation[n] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>j = 1 ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>test = False ; <o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>While[ Not[test] &amp;&amp; j &lt;= n,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>jp = perm[[j]] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>If[ <o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">          </span>int[[jp, jp]] == 1 &amp;&amp;
Sum[net[[jp, k]], {k, 1, n}] == 0 &amp;&amp; jp != i,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">    </span><span style="mso-spacerun:
yes">      </span><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">          </span>If[cnetwork[[i, jp]] == 0, p =
strangers[[i]], <o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">            </span>p = proba[distance[[i, jp]]]];<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">          </span>If[Random[] &lt; p, network[[i, jp]]
= 1 ; network[[jp, i]] = 1 ; <o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">            </span>test = True]] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>j++] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>If[! test, network[[i, i]] = 1] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>network] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>(*
function creates pattern of interactions for upcoming round *)<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>nextstep[cnetwork_,
int_] := Module[{i, j, net, ip, perm} ,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>net = Table[0, {n}, {n}] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>perm = RandomPermutation[n] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>For[i = 1, i &lt;= n, i++,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>ip = perm[[i]] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>If[Sum[net[[ip, j]], {j, 1, n}] == 0,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">          </span>If[int[[ip, ip]] == 0,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">            </span>j = neighbor[int, ip] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">            </span>net = intstep[net, ip, j],<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">            </span>net = singlestep[cnetwork, int,
net, ip]]]] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes"> </span><span style="mso-spacerun: yes">    
</span>net] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>process[time_]
:= Module[{t, cnetwork, frequency, int},<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>cnetwork = inetwork ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>frequency = Table[0, {n}, {n}] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>int = IdentityMatrix[n] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>For[t = 1, t &lt;= time, t++,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>int = nextstep[cnetwork, int] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">       </span><span style="mso-spacerun:
yes"> </span>cnetwork = cnetwork + int ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>frequency = frequency + int ] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>frequency] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>alone[f_]
:= Module[{i, rep},<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>rep = 0 ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>For[i = 1, i &lt;= n, i++,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>rep = rep + f[[i, i]]] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>rep] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>density[f_]
:= Module[{i, j, rep},<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>rep = 0 ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>For[i = 1, i &lt;= n, i++,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>For[j = i + 1, j &lt;= n, j++,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">          </span>If[f[[i, j]] &gt; 0, rep = rep +
1]]] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>rep ] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>number<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>att<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>data1 =
Table[0, {32}] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>data2 =
Table[0, {32}] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>data3 =
Table[0, {32}] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>k = 1 ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>For[e =
0, e &lt;= n, e = e + 5,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">    </span>strangers = Module[{i, v, perm},<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>v = Table[0, {n}] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>perm = RandomPermutation[n] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>For[i = 1, i &lt;= e, i++,
v[[perm[[i]]]] = .4] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">        </span>v] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">    </span>Print[&quot;Number of extrovert &quot;, e]
;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">   </span><span style="mso-spacerun:
yes"> </span>For[d = 0, d &lt;= .5, d = d + .1,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>inetwork = Module[{net, i, j} ,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">          </span>net = Table[0, {n}, {n}] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">          </span>For[i = 1, i &lt;= n, i++,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">            </span>For[j = i + 1, j &lt;= n, j++,<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">              </span>If[Random[] &lt; d, net[[i, j]]
= 1]]] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">          </span>net = net + Transpose[net] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">          </span>net] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>pro = process[time] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>data1[[k]] = density[inetwork] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>data2[[k]] = density[pro] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>data3[[k]] = alone[pro] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><span
style="mso-spacerun: yes">      </span>k++]] ;<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>MatrixForm[data1]<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>MatrixForm[data2]<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>MatrixForm[data3]<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>Export[&quot;data1.dat&quot;,
data1]<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>Export[&quot;data2.dat&quot;,
data2]<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'>Export[&quot;data3.dat&quot;,
data3]<o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoPlainText><span style='mso-fareast-font-family:"MS Mincho"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>
